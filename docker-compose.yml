version: '3'
networks:
  hostnet:
    external: true
volumes:
  magento_2_test: { external: true }
  magento_2_test_db: { external: true }
  siminia: { external: true }
services:
  # proxy service that creates a reverse proxy to the pwa container - https://bit.ly/2HpZJDI
  # the reverse proxy connects the SSL/TLS certs created on the local file system into the nginx container
  # this allows the pwa container to be accessible over HTTPS
  # it also proxies requests to the configured domain running at the configured port for the pwa container
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    hostname: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./pwa-studio/docker/certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: unless-stopped
    networks:
      hostnet: {}

  pwa:
    hostname: ${PWA_STUDIO_PUBLIC_PATH}
    # build pwa using the Dockerfile from the PWD
    image: pwa-studio
    # list of directories and files on the host system to volume mount into the container
    # changes made to files in the container and on the host file system are mapped to one another
    # this enables hot reloading from the container to detect changes made on the host file system
    volumes:
      - ./pwa-studio/packages/peregrine/.storybook:/usr/src/app/packages/peregrine/.storybook:rw
      - ./pwa-studio/packages/peregrine/scripts:/usr/src/app/packages/peregrine/scripts:rw
      - ./pwa-studio/packages/peregrine/src:/usr/src/app/packages/peregrine/src:rw
      - ./pwa-studio/packages/pwa-buildpack/src:/usr/src/app/packages/pwa-buildpack/src:rw
      - ./pwa-studio/packages/upward-js/lib:/usr/src/app/packages/upward-js/lib:rw
      - ./pwa-studio/packages/venia-concept/.storybook:/usr/src/app/packages/venia-concept/.storybook:rw
      - ./pwa-studio/packages/venia-concept/src:/usr/src/app/packages/venia-concept/src:rw
      - ./pwa-studio/packages/venia-concept/static:/usr/src/app/packages/venia-concept/static:rw
      - siminia:/usr/src/app/packages/siminia:rw
      - ./pwa-studio/packages/upward-spec:/usr/src/app/packages/upward-spec:rw
      - ./.env:/usr/src/app/packages/siminia/.env:rw
      - ./pwa-studio/docker/entrypoint:/usr/src/app/entrypoint:rw
      - ./pwa-studio/package.json:/usr/src/app/package.json:rw
    links:
      - nginx-proxy
    environment:
      CONCEPT: "@simicart/siminia"
      # environment variables consumed by the nginx-proxy service
      VIRTUAL_HOST: ${PWA_STUDIO_PUBLIC_PATH}
      VIRTUAL_PORT: ${PWA_STUDIO_PORTS_DEVELOPMENT}
    expose:
      - ${PWA_STUDIO_PORTS_DEVELOPMENT}
    extra_hosts:
      - "magento.localhost:172.18.0.1"
    networks:
      hostnet: {}

  magento:
    image: thinlt/magento:nginx-1.15-php-7.1
    volumes:
      - magento_2_test:/var/www/html:nocopy
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /Users/robert/Simi-Workspace/github/SimiCart-Magento2.x/app/code/Simi/Simiconnector:/var/www/html/app/code/Simi/Simiconnector
    ports:
      # - 80:80
      - 8080:80
      - 4043:443
    networks:
      hostnet: {}

  db:
    image: mariadb:10.2
    environment:
      MYSQL_ROOT_PASSWORD: magento
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
      MYSQL_DATABASE: magento
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
      - magento_2_test_db:/var/lib/mysql:nocopy
    networks:
      hostnet: {}
  
  # redis:
  #   image: redis
  #   networks:
  #     hostnet: {}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8081:80
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: magento
    networks:
      hostnet: {}

  mailhog:
    image: mailhog/mailhog
    ports:
      - 8082:8025
    networks:
      hostnet: {}
